name: AWS EC2 Deployment

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main
    paths:
      - 'AWS/**'

env:
  # AWS Configuration
  AWS_CLI_KEY_ID: ${{ secrets.AWS_CLI_KEY_ID }}
  AWS_CLI_KEY_SECRET: ${{ secrets.AWS_CLI_KEY_SECRET }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
  # EC2 Configuration
  AWS_EC2_US_EAST_1_AMI_BASE_LINUX_X86_64_ID: ${{ secrets.AWS_EC2_US_EAST_1_AMI_BASE_LINUX_X86_64_ID }}
  AWS_EC2_INSTANCE_COUNT: ${{ secrets.AWS_EC2_INSTANCE_COUNT }}
  AWS_EC2_INSTANCE_TYPE: ${{ secrets.AWS_EC2_INSTANCE_TYPE }}
  AWS_EC2_INSTANCE_NAME: ${{ secrets.AWS_EC2_INSTANCE_NAME }}
  AWS_EC2_KEY_PAIR_NAME: ${{ secrets.AWS_EC2_KEY_PAIR_NAME }}
  AWS_EC2_SECURITY_GROUPS: ${{ secrets.AWS_EC2_SECURITY_GROUPS }}

jobs:
  deploy-aws-ec2:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install AWS CLI v2
      run: |
        echo "Installing AWS CLI v2..."
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        
        echo "Verifying AWS CLI installation..."
        echo "--------------------------------"
        echo "AWS CLI INSTALLATION PATH:"
        which aws
        echo "--------------------------------"
        echo "AWS CLI VERSION:"
        aws --version

    - name: Configure AWS CLI
      run: |
        echo "Configuring AWS CLI with provided credentials and region..."
        aws configure set aws_access_key_id $AWS_CLI_KEY_ID
        aws configure set aws_secret_access_key $AWS_CLI_KEY_SECRET
        aws configure set region $AWS_REGION
        aws configure set output json
        
        echo "AWS CLI configured successfully."
        echo "Current AWS configuration:"
        aws configure list

    - name: Create EC2 Key Pair
      run: |
        echo "Creating Key Pairs..."
        
        # Check if key pair already exists
        if aws ec2 describe-key-pairs --key-name $AWS_EC2_KEY_PAIR_NAME 2>/dev/null; then
          echo "Key pair $AWS_EC2_KEY_PAIR_NAME already exists. Skipping creation."
        else
          echo "Creating new key pair: $AWS_EC2_KEY_PAIR_NAME"
          aws ec2 create-key-pair --key-name $AWS_EC2_KEY_PAIR_NAME --query 'KeyMaterial' --output text > $AWS_EC2_KEY_PAIR_NAME.pem
          
          echo "Updating permissions on .pem file"
          chmod 400 $AWS_EC2_KEY_PAIR_NAME.pem
          
          echo "Key pair created successfully."
        fi
        
        echo "Listing the details for key pair:"
        aws ec2 describe-key-pairs --key-name $AWS_EC2_KEY_PAIR_NAME

    - name: Create EC2 Instance
      run: |
        echo "Creating EC2 Instance with all the required Parameters..."
        
        # Check if instance with the same name already exists and is running
        EXISTING_INSTANCE=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=$AWS_EC2_INSTANCE_NAME" "Name=instance-state-name,Values=running,pending" \
          --query 'Reservations[*].Instances[*].InstanceId' \
          --output text)
        
        if [ ! -z "$EXISTING_INSTANCE" ]; then
          echo "Instance with name $AWS_EC2_INSTANCE_NAME already exists and is running: $EXISTING_INSTANCE"
          echo "Skipping instance creation."
        else
          echo "Creating new EC2 instance..."
          INSTANCE_RESULT=$(aws ec2 run-instances \
            --image-id $AWS_EC2_US_EAST_1_AMI_BASE_LINUX_X86_64_ID \
            --count $AWS_EC2_INSTANCE_COUNT \
            --instance-type $AWS_EC2_INSTANCE_TYPE \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=$AWS_EC2_INSTANCE_NAME}]" \
            --key-name $AWS_EC2_KEY_PAIR_NAME \
            --security-group-ids $AWS_EC2_SECURITY_GROUPS)
          
          INSTANCE_ID=$(echo $INSTANCE_RESULT | jq -r '.Instances[0].InstanceId')
          echo "EC2 Instance created successfully with ID: $INSTANCE_ID"
          
          echo "Waiting for instance to be in running state..."
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          
          echo "Instance is now running. Getting instance details..."
          aws ec2 describe-instances --instance-ids $INSTANCE_ID
        fi

    - name: Store Key Pair (Optional)
      if: always()
      run: |
        # Store the key pair as an artifact (optional, for debugging)
        if [ -f "$AWS_EC2_KEY_PAIR_NAME.pem" ]; then
          echo "Key pair file created and available for this session"
          # Note: For security, avoid uploading private keys as artifacts in production
          # This step is just for verification that the file was created
          ls -la *.pem
        fi

    - name: Cleanup (Optional)
      if: always()
      run: |
        # Clean up sensitive files
        if [ -f "$AWS_EC2_KEY_PAIR_NAME.pem" ]; then
          rm -f $AWS_EC2_KEY_PAIR_NAME.pem
          echo "Cleaned up key pair file from runner"
        fi